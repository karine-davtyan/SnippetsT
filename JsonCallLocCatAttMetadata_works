<?xml version="1.0" encoding="UTF-8"?>
<purity-config version="14.5.1.231204-6829-cc8f270d">
  <references/>
  <component-mappings>
    <propertyMappings/>
  </component-mappings>

  <!-- 1) Read location GIDs -->
  <step id="LocationInput" mode="NORMAL"
        className="com.ataccama.dqc.tasks.io.text.read.TextFileReader">
    <properties fileName="./location_gids.csv"
                fieldSeparator=";"
                numberOfLinesInHeader="1"
                encoding="UTF-8"
                lineSeparator="\n">
      <columns>
        <textReaderColumn name="src_locationGid" type="STRING"/>
      </columns>
    </properties>
  </step>

  <!-- 2) GraphQL call with embedded reader -->
  <step id="JsonCall" mode="NORMAL"
        className="com.ataccama.dqc.tasks.io.json.call.JsonCall">
    <properties method="POST"
                url="https://teranet.prod.ataccama.online/graphql"
                timeoutMs="30000"
                templateBeginMark="#"
                templateEndMark="#">
      <headers>
        <header name="Content-Type" value="application/json"/>
        <header name="Authorization"
                value="Basic YWRtaW46TGFlZ2V2YWVHYWp1RDlpZXF1ZWljaG9vRG9uaWVwYTA="/>
      </headers>
      <inputTemplate>{
        &quot;query&quot;:
        &quot;query GetLocationCatalogItems($locationGid:GID!){location(gid:$locationGid){draftVersion{name catalogItems{edges{node{gid draftVersion{name} publishedVersion{description attributes{edges{node{draftVersion{name description}}}}}}}}}}}&quot;,
        &quot;variables&quot;:{&quot;locationGid&quot;:&quot;#src_locationGid#&quot;}
      }</inputTemplate>

      <reader>
        <dataStreams>

          <!-- Level 1: location object -->
          <rootJsonStreamConfig path="$.data.location"
                                name="location"
                                minOneRecord="true"
                                maxOneRecord="false">
            <attributes>
              <attribute path="draftVersion.name"
                         name="location_name"
                         type="STRING"/>
            </attributes>
            <shadowColumns>
              <shadowColumnDef name="src_locationGid"
                               type="STRING"
                               defaultExpression="in.src_locationGid"/>
            </shadowColumns>

            <dataStreams>

              <!-- Level 2: catalog items -->
              <childJsonStreamConfig path="draftVersion.catalogItems.edges"
                                    name="items"
                                    minOneRecord="false"
                                    maxOneRecord="false">
                <attributes>
                  <attribute path="node.gid"
                             name="item_gid"
                             type="STRING"/>
                  <attribute path="node.draftVersion.name"
                             name="item_name"
                             type="STRING"/>
                  <attribute path="node.publishedVersion.description"
                             name="item_description"
                             type="STRING"/>
                </attributes>
                <shadowColumns>
                  <shadowColumnDef name="location_name"
                                   type="STRING"
                                   defaultExpression="location_name"/>
                </shadowColumns>

                <dataStreams>

                  <!-- Level 3: attributes of each item -->
                  <childJsonStreamConfig path="node.publishedVersion.attributes.edges"
                                        name="attributes"
                                        minOneRecord="false"
                                        maxOneRecord="false">
                    <attributes>
                      <attribute path="node.draftVersion.name"
                                 name="attribute_name"
                                 type="STRING"/>
                      <attribute path="node.draftVersion.description"
                                 name="attribute_description"
                                 type="STRING"/>
                    </attributes>
                    <shadowColumns>
                      <shadowColumnDef name="src_locationGid"
                                       type="STRING"
                                       defaultExpression="src_locationGid"/>
                      <shadowColumnDef name="location_name"
                                       type="STRING"
                                       defaultExpression="location_name"/>
                      <shadowColumnDef name="item_gid"
                                       type="STRING"
                                       defaultExpression="item_gid"/>
                      <shadowColumnDef name="item_name"
                                       type="STRING"
                                       defaultExpression="item_name"/>
                    </shadowColumns>
                  </childJsonStreamConfig>

                </dataStreams>
              </childJsonStreamConfig>

            </dataStreams>
          </rootJsonStreamConfig>

        </dataStreams>
      </reader>
    </properties>
  </step>

  <!-- 3) Write items -->
  <step id="ItemsOut" mode="NORMAL"
        className="com.ataccama.dqc.tasks.io.text.write.TextFileWriter">
    <properties fileName="./items_out.csv"
                fieldSeparator=";"
                writeHeader="true"
                writeAllColumns="true"
                encoding="UTF-8"
                lineSeparator="\r\n"/>
  </step>

  <!-- 4) Write attributes -->
  <step id="AttributesOut" mode="NORMAL"
        className="com.ataccama.dqc.tasks.io.text.write.TextFileWriter">
    <properties fileName="./attributes_out.csv"
                fieldSeparator=";"
                writeHeader="true"
                writeAllColumns="true"
                encoding="UTF-8"
                lineSeparator="\r\n"/>
  </step>

  <!-- 5) Pass-through default out -->
  <step id="RawOut" mode="NORMAL"
        className="com.ataccama.dqc.tasks.io.text.write.TextFileWriter">
    <properties fileName="./raw_out.csv"
                fieldSeparator=";"
                writeHeader="true"
                writeAllColumns="true"
                encoding="UTF-8"
                lineSeparator="\n"/>
  </step>

  <!-- Connections -->
  <connection className="com.ataccama.dqc.model.elements.connections.StandardFlowConnection">
    <source step="LocationInput" endpoint="out"/>
    <target step="JsonCall"       endpoint="in"/>
  </connection>
  <connection className="com.ataccama.dqc.model.elements.connections.StandardFlowConnection">
    <source step="JsonCall" endpoint="items"/>
    <target step="ItemsOut" endpoint="in"/>
  </connection>
  <connection className="com.ataccama.dqc.model.elements.connections.StandardFlowConnection">
    <source step="JsonCall" endpoint="attributes"/>
    <target step="AttributesOut" endpoint="in"/>
  </connection>
  <connection className="com.ataccama.dqc.model.elements.connections.StandardFlowConnection">
    <source step="JsonCall" endpoint="out"/>
    <target step="RawOut"      endpoint="in"/>
  </connection>
</purity-config>
