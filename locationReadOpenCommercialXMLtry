<?xml version="1.0" encoding="UTF-8"?>
<purity-config version="14.5.1.231204-6829-cc8f270d">

  <!-- 1) INPUT ------------------------------------------------------------ -->
  <step id="LocationInput"
        className="com.ataccama.dqc.tasks.io.text.read.TextFileReader">
    <properties fileName="./location_gids.csv"
                fieldSeparator=";"
                encoding="UTF-8"
                lineSeparator="\n"
                numberOfLinesInHeader="1">
      <columns>
        <textReaderColumn name="src_locationGid" type="STRING"/>
      </columns>
    </properties>
  </step>

  <connection>
    <source step="LocationInput" endpoint="out"/>
    <target step="JsonCall"      endpoint="in"/>
  </connection>


  <!-- 2) JSON CALL -------------------------------------------------------- -->
  <step id="JsonCall"
        className="com.ataccama.dqc.tasks.io.json.call.JsonCall">
    <properties method="POST"
                url="https://teranet.prod.ataccama.online/graphql"  <!-- ← replace -->
                encoding="UTF-8"
                templateBeginMark="#"
                templateEndMark="#">
      <headers>
        <header name="Content-Type"  value="application/json"/>
        <header name="Authorization"
                value="Bearer YWRtaW46TGFlZ2V2YWVHYWp1RDlpZXF1ZWljaG9vRG9uaWVwYTA="/> <!-- ← replace -->
      </headers>

      <inputTemplate>{
        "query":"query GetLocationCatalogItems($locationGid:GID!){location(gid:$locationGid){draftVersion{name catalogItems{edges{node{gid draftVersion{name} publishedVersion{description attributes{edges{node{draftVersion{name description}}}}}}}}}}}",
        "variables":{"locationGid":"#src_locationGid#"}
      }</inputTemplate>

      <reader>
        <dataStreams>

          <!-- 2A) ITEMS (one row per catalog item) -->
          <rootJsonStreamConfig name="Items"
                                path="$.data.location.draftVersion.catalogItems.edges">
            <attributes>
              <attribute path="node.gid"                           name="item_gid"   type="STRING"/>
              <attribute path="node.draftVersion.name"            name="item_name"  type="STRING"/>
              <attribute path="node.publishedVersion.description" name="item_desc"  type="STRING"/>
            </attributes>
            <shadowColumns>
              <shadowColumnDef name="src_locationGid"
                               defaultExpression="in.src_locationGid"
                               type="STRING"/>
            </shadowColumns>

            <dataStreams>

              <!-- 2B) ATTRIBUTES (one row per attribute of this item) -->
              <childJsonStreamConfig name="Attributes"
                                     path="$.node.publishedVersion.attributes.edges">
                <attributes>
                  <attribute path="node.draftVersion.name"        name="attr_name" type="STRING"/>
                  <attribute path="node.draftVersion.description" name="attr_desc" type="STRING"/>
                </attributes>
                <shadowColumns>
                  <shadowColumnDef name="src_locationGid"
                                   defaultExpression="in.src_locationGid" type="STRING"/>
                  <shadowColumnDef name="item_gid"
                                   defaultExpression="in.item_gid"      type="STRING"/>
                  <shadowColumnDef name="item_name"
                                   defaultExpression="in.item_name"     type="STRING"/>
                  <shadowColumnDef name="item_desc"
                                   defaultExpression="in.item_desc"     type="STRING"/>
                </shadowColumns>
                <dataStreams/>
              </childJsonStreamConfig>

            </dataStreams>
          </rootJsonStreamConfig>

        </dataStreams>
      </reader>
    </properties>
  </step>


  <!-- 3) OUTPUTS ---------------------------------------------------------- -->

  <!-- catalog_items.csv -->
  <step id="ItemsOutput"
        className="com.ataccama.dqc.tasks.io.text.write.TextFileWriter">
    <properties writeHeader="true"
                fileName="catalog_items.csv"
                fieldSeparator=";"
                writeAllColumns="true"
                encoding="UTF-8"
                lineSeparator="\n"/>
  </step>
  <connection>
    <source step="JsonCall" endpoint="Items"/>
    <target step="ItemsOutput" endpoint="in"/>
  </connection>

  <!-- catalog_attributes.csv -->
  <step id="AttributesOutput"
        className="com.ataccama.dqc.tasks.io.text.write.TextFileWriter">
    <properties writeHeader="true"
                fileName="catalog_attributes.csv"
                fieldSeparator=";"
                writeAllColumns="true"
                encoding="UTF-8"
                lineSeparator="\n"/>
  </step>
  <connection>
    <source step="JsonCall" endpoint="Attributes"/>
    <target step="AttributesOutput" endpoint="in"/>
  </connection>

  <!-- passthrough for JsonCall/out so runtime stays quiet -->
  <step id="OutPass"
        className="com.ataccama.dqc.tasks.io.text.write.TextFileWriter">
    <properties writeHeader="false"
                fileName="out_passthrough.csv"
                fieldSeparator=";"
                writeAllColumns="true"
                encoding="UTF-8"
                lineSeparator="\n"/>
  </step>
  <connection>
    <source step="JsonCall" endpoint="out"/>
    <target step="OutPass"  endpoint="in"/>
  </connection>

</purity-config>
